{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract IBEP20",
						"name": "_base",
						"type": "address"
					},
					{
						"internalType": "contract IBEP20",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "contract ITuringTimeLock",
						"name": "_turingTimeLockContract",
						"type": "address"
					},
					{
						"internalType": "contract ITuringswapFeeMachine",
						"name": "_feeMachineContract",
						"type": "address"
					},
					{
						"internalType": "contract ITuringswapFarmVenus",
						"name": "_farmContract",
						"type": "address"
					},
					{
						"internalType": "contract ITuringswapWhitelist",
						"name": "_whitelistContract",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					},
					{
						"internalType": "uint8",
						"name": "decimal",
						"type": "uint8"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "mintLP",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "baseInputAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenInputAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "poolBaseBalance",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "poolTokenBalance",
						"type": "uint256"
					}
				],
				"name": "onAddLP",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountLP",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "baseOutputAmout",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenOutputAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "poolBaseBalance",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "poolTokenBalance",
						"type": "uint256"
					}
				],
				"name": "onRemoveLP",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "minTokenOutput",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "baseInputAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenOutputAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "poolBaseBalance",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "poolTokenBalance",
						"type": "uint256"
					}
				],
				"name": "onSwapBaseToTokenWithBaseInput",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "maxBaseInput",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "baseInputAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenOutputAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "poolBaseBalance",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "poolTokenBalance",
						"type": "uint256"
					}
				],
				"name": "onSwapBaseToTokenWithTokenOutput",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "maxTokenInput",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenInputAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "baseOutputAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "poolBaseBalance",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "poolTokenBalance",
						"type": "uint256"
					}
				],
				"name": "onSwapTokenToBaseWithBaseOutput",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "minBaseOutput",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenInputAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "baseOutputAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "poolBaseBalance",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "poolTokenBalance",
						"type": "uint256"
					}
				],
				"name": "onSwapTokenToBaseWithTokenInput",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "TRADE_FEE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "minLP",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "baseInputAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxTokenInputAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "addLP",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "base",
				"outputs": [
					{
						"internalType": "contract IBEP20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "farmContract",
				"outputs": [
					{
						"internalType": "contract ITuringswapFarmVenus",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "feeMachineContract",
				"outputs": [
					{
						"internalType": "contract ITuringswapFeeMachine",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenOutputAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "baseReserve",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokenReserve",
						"type": "uint256"
					}
				],
				"name": "getBaseInputAmountFromTokenOutput",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenInputAmount",
						"type": "uint256"
					}
				],
				"name": "getBaseOutput",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenInputAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "baseReserve",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokenReserve",
						"type": "uint256"
					}
				],
				"name": "getBaseOutputAmountFromTokenInput",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "baseInputAmount",
						"type": "uint256"
					}
				],
				"name": "getDataFromBaseInputToAddLp",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenInputAmount",
						"type": "uint256"
					}
				],
				"name": "getDataFromTokenInputToAddLp",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountLP",
						"type": "uint256"
					}
				],
				"name": "getDataToRemoveLP",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getK",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "baseOutputAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "baseReserve",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokenReserve",
						"type": "uint256"
					}
				],
				"name": "getTokenInputAmountFromBaseOutput",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "baseInputAmount",
						"type": "uint256"
					}
				],
				"name": "getTokenOutput",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "baseInputAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "baseReserve",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokenReserve",
						"type": "uint256"
					}
				],
				"name": "getTokenOutputAmountFromBaseInput",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTotalReserve",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					},
					{
						"internalType": "uint8",
						"name": "decimal",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "totalSupply",
						"type": "uint256"
					}
				],
				"name": "initToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "initialized",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "rebalanceToFarmContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountLP",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minBaseOutput",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minTokenOutput",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "removeLP",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "setFarmContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "setFeeMachineContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "setTradeFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "baseInputAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minTokenOutput",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "swapBaseToTokenWithBaseInput",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "maxBaseInput",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokenOutputAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "swapBaseToTokenWithTokenOutput",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "maxTokenInput",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "baseOutputAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "swapTokenToBaseWithBaseOutput",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenInputAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minBaseOutput",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "swapTokenToBaseWithTokenInput",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "token",
				"outputs": [
					{
						"internalType": "contract IBEP20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "turingTimeLockContract",
				"outputs": [
					{
						"internalType": "contract ITuringTimeLock",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "whitelistContract",
				"outputs": [
					{
						"internalType": "contract ITuringswapWhitelist",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "See {BEP20-allowance}."
				},
				"approve(address,uint256)": {
					"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
				},
				"balanceOf(address)": {
					"details": "See {BEP20-balanceOf}."
				},
				"decimals()": {
					"details": "Returns the token decimals."
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
				},
				"getOwner()": {
					"details": "Returns the bep token owner."
				},
				"increaseAllowance(address,uint256)": {
					"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
				},
				"name()": {
					"details": "Returns the token name."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"symbol()": {
					"details": "Returns the token symbol."
				},
				"totalSupply()": {
					"details": "See {BEP20-totalSupply}."
				},
				"transfer(address,uint256)": {
					"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/TuringStableAMM/TuringswapTradeVenus.sol": "TuringswapTradeVenus"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/TuringStableAMM/TuringswapTradeVenus.sol": {
			"keccak256": "0x17ecb995015da6aaa7e8e8d9c996525d3774c78cd52f3072f3d8a5f439f98f22",
			"license": "MIT",
			"urls": [
				"bzz-raw://9417b86185279c51eedf847cfff7412acef7cf296e0cf406c41708f6263e33a8",
				"dweb:/ipfs/QmfHXknoAm14fhEz9bGUPk4X61wjtCB8SpMPxVJgXSH1Ai"
			]
		},
		"contracts/TuringStableAMM/interfaces/IBEP20.sol": {
			"keccak256": "0x50bb2624c632376724d4841c25a1d9c3737eb58426b43ce9796f9e50f32146b3",
			"license": "MIT",
			"urls": [
				"bzz-raw://6cdd05742ce2ccde1f62f81766fbebbd2b5f4094773f08410b90aeb473105d4e",
				"dweb:/ipfs/QmdCuG4RAUurc8L5wuLcxG7ivHAYutS2nBtrxBxGxT2XUh"
			]
		},
		"contracts/TuringStableAMM/interfaces/ITuringTimeLock.sol": {
			"keccak256": "0xb15cc69185975ea9419fc4268d57f6959d8d53ec1317afdf8be9f4b0238caf0d",
			"license": "MIT",
			"urls": [
				"bzz-raw://ea973b132660c9c252f8ae42522cddf650ed803a2d67d3dd914aee3e94aacfa5",
				"dweb:/ipfs/QmeEMGBsZKstGdJdzfr4zrw64eMpa3FYu5tfHsKzKzZXMp"
			]
		},
		"contracts/TuringStableAMM/interfaces/ITuringswapFarmVenus.sol": {
			"keccak256": "0xef4b2ce1a667a316b1cac4fba0b61ee92f50cbe758fb699ef90bbb19dc8a8a26",
			"license": "MIT",
			"urls": [
				"bzz-raw://44f82b1e6acbef900823fc1251ff46431b7d9dd09b47840874269f501797cccd",
				"dweb:/ipfs/QmWkLqUco58YRLzeXbvLFXRD4dtrgMnxxTxatRnFNhAfxR"
			]
		},
		"contracts/TuringStableAMM/interfaces/ITuringswapFeeMachine.sol": {
			"keccak256": "0xaa2d199fba2714f7fc1df63ceca8671c5dd293737d58bf44bab74b20d114821c",
			"license": "MIT",
			"urls": [
				"bzz-raw://94b03158b7b966e2d22db38ce726d0d38b34ebe95ee6c5fce8e04e0321b8c0f1",
				"dweb:/ipfs/QmYSK6LYvu5D5yst2SS4qz9gj7MCYANR1oAhcabHW6Tq7k"
			]
		},
		"contracts/TuringStableAMM/interfaces/ITuringswapWhitelist.sol": {
			"keccak256": "0xa570d86ad4c445a624e66f79cd9fbe2f4dad346ad08f2896d6eef37526a8eb25",
			"license": "MIT",
			"urls": [
				"bzz-raw://fa2664bb5fa8f9ec59c4fb9849b02c247b936df25644058e9faae053956efdbd",
				"dweb:/ipfs/QmYE69Ljm9mAWpaJVES1sW2D96LFJY6BMx2roVaZCjdb7S"
			]
		},
		"contracts/TuringStableAMM/library/BEP20Token.sol": {
			"keccak256": "0x99c7936a19ceaf3b6eb77da5f7d36ba22df987fe98d7e55da645fb05a5da7b40",
			"license": "MIT",
			"urls": [
				"bzz-raw://1dbf58be5d491b28777f7b56d0450dc3b8cc52e7d8d546a4bc6b274e665ad56f",
				"dweb:/ipfs/QmeiTvwqtECzzfgEUWThEjkHiuuBq6NLG3GtDksSCyauPT"
			]
		},
		"contracts/TuringStableAMM/library/Ownable.sol": {
			"keccak256": "0x601ff4e79b7b3471209a0a76c8fcf4a3ae26f928e4d45e421a94c70519ce479a",
			"license": "MIT",
			"urls": [
				"bzz-raw://b013c644933c471c70143a7182616a011e8eb232940ef7d8b62f0beba7020f96",
				"dweb:/ipfs/QmNwKH91DoWAQvforsWmmjMDz44v3TAtU9FjgjXWsuELx4"
			]
		},
		"contracts/TuringStableAMM/library/SafeMath.sol": {
			"keccak256": "0xdfb28eceb55bad800f716af1225ba55c41e5a7a780876c96fb0f74d23b6c1fd8",
			"license": "MIT",
			"urls": [
				"bzz-raw://2491c469f9fb79b1a39cb8fcd16f133dc886c2ba8d03e3635ce923925b7842a0",
				"dweb:/ipfs/QmRCgZXQEQ7UVbUA7xt4mZpQbWeoKcGSUqaFRVzKy1S8WV"
			]
		}
	},
	"version": 1
}